{
  "swagger": "2.0",
  "info": {
    "description": "GreenBuddies Documentation",
    "version": "1.0",
    "title": "GreenBuddies Documentation"
  },
  "host": "localhost:8081",
  "basePath": "/",
  "tags": [
    {
      "name": "article-controller",
      "description": "Article Controller"
    },
    {
      "name": "cart-controller",
      "description": "Cart Controller"
    },
    {
      "name": "product-controller",
      "description": "Product Controller"
    },
    {
      "name": "receipt-controller",
      "description": "Receipt Controller"
    },
    {
      "name": "role-controller",
      "description": "Role Controller"
    },
    {
      "name": "user-controller",
      "description": "User Controller"
    }
  ],
  "paths": {
    "/articles": {
      "get": {
        "tags": [
          "article-controller"
        ],
        "summary": "List of all Articles",
        "operationId": "findAllUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK. The resource is obtained correctly",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Article"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/articles/delete/{id}": {
      "delete": {
        "tags": [
          "article-controller"
        ],
        "summary": "Deletion of a record in Articles entity by id",
        "operationId": "deleteProductUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The resource is obtained correctly",
            "schema": {
              "type": "string"
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/articles/id/{id}": {
      "get": {
        "tags": [
          "article-controller"
        ],
        "summary": "Search by Id in Articles entity",
        "operationId": "findByIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The resource is obtained correctly",
            "schema": {
              "$ref": "#/definitions/Article"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/articles/save": {
      "post": {
        "tags": [
          "article-controller"
        ],
        "summary": "Insertion of a new registry in Articles entity",
        "operationId": "saveUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "a",
            "description": "a",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Article"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The resource is obtained correctly",
            "schema": {
              "$ref": "#/definitions/Article"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/articles/update": {
      "put": {
        "tags": [
          "article-controller"
        ],
        "summary": "Update by id of a record in Articles entity",
        "operationId": "updateArticleUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "newA",
            "description": "newA",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Article"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The resource is obtained correctly",
            "schema": {
              "$ref": "#/definitions/Article"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/articles/{title}": {
      "get": {
        "tags": [
          "article-controller"
        ],
        "summary": "Search by title in Articles entity",
        "operationId": "findArticlesByTitleUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "title",
            "in": "path",
            "description": "title",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The resource is obtained correctly",
            "schema": {
              "$ref": "#/definitions/Article"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/carts": {
      "get": {
        "tags": [
          "cart-controller"
        ],
        "summary": "List of all Carts",
        "operationId": "findAllUsingGET_1",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK. The resource is obtained correctly",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Cart"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/carts/delete/{id}": {
      "delete": {
        "tags": [
          "cart-controller"
        ],
        "summary": "Deletion of a record in Carts entity by id",
        "operationId": "deleteCartUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The resource is obtained correctly",
            "schema": {
              "type": "string"
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/carts/id/{id}": {
      "get": {
        "tags": [
          "cart-controller"
        ],
        "summary": "Search by Id in Carts entity",
        "operationId": "findByIdUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The resource is obtained correctly",
            "schema": {
              "$ref": "#/definitions/Cart"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/carts/save": {
      "post": {
        "tags": [
          "cart-controller"
        ],
        "summary": "Insertion of a new registry in Carts entity",
        "operationId": "saveUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "c",
            "description": "c",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cart"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The resource is obtained correctly",
            "schema": {
              "$ref": "#/definitions/Cart"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/carts/update": {
      "put": {
        "tags": [
          "cart-controller"
        ],
        "summary": "Update by id of a record in Carts entity",
        "operationId": "updateCartUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "newCart",
            "description": "newCart",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cart"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The resource is obtained correctly",
            "schema": {
              "$ref": "#/definitions/Cart"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/carts/user/{id}": {
      "get": {
        "tags": [
          "cart-controller"
        ],
        "summary": "List of all Carts by user",
        "operationId": "listCartsByUserIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The resource is obtained correctly",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Cart"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": [
          "product-controller"
        ],
        "summary": "List of all Products",
        "operationId": "findAllUsingGET_2",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK. The resource is obtained correctly",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/products/category/{name}": {
      "get": {
        "tags": [
          "product-controller"
        ],
        "summary": "List of all Products by category",
        "operationId": "listProductsByCategoryUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The resource is obtained correctly",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/products/delete/{id}": {
      "delete": {
        "tags": [
          "product-controller"
        ],
        "summary": "Deletion of a record in Products entity by id",
        "operationId": "deleteProductUsingDELETE_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The resource is obtained correctly",
            "schema": {
              "type": "string"
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/products/id/{id}": {
      "get": {
        "tags": [
          "product-controller"
        ],
        "summary": "Search by Id in Products entity",
        "operationId": "findByIdUsingGET_2",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The resource is obtained correctly",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/products/save": {
      "post": {
        "tags": [
          "product-controller"
        ],
        "summary": "Insertion of a new registry in Products entity",
        "operationId": "saveUsingPOST_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "p",
            "description": "p",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The resource is obtained correctly",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/products/update": {
      "put": {
        "tags": [
          "product-controller"
        ],
        "summary": "Update by id of a record in Products entity",
        "operationId": "updateProductUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "newP",
            "description": "newP",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The resource is obtained correctly",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/products/{name}": {
      "get": {
        "tags": [
          "product-controller"
        ],
        "summary": "Search by name in Products entity",
        "operationId": "findProductByNameUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The resource is obtained correctly",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/receipts": {
      "get": {
        "tags": [
          "receipt-controller"
        ],
        "summary": "List of all Receipts",
        "operationId": "findAllUsingGET_3",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK. The resource is obtained correctly",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Receipt"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/receipts/cart/{id}": {
      "get": {
        "tags": [
          "receipt-controller"
        ],
        "summary": "Find by cart Id in Receipts entity",
        "operationId": "findReceiptByCartIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The resource is obtained correctly",
            "schema": {
              "$ref": "#/definitions/Receipt"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/receipts/delete/{id}": {
      "delete": {
        "tags": [
          "receipt-controller"
        ],
        "summary": "Deletion of a record in Receipts entity by id",
        "operationId": "deleteUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The resource is obtained correctly",
            "schema": {
              "type": "string"
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/receipts/id/{id}": {
      "get": {
        "tags": [
          "receipt-controller"
        ],
        "summary": "Search by Id in Receipts entity",
        "operationId": "findByIdUsingGET_3",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The resource is obtained correctly",
            "schema": {
              "$ref": "#/definitions/Receipt"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/receipts/number/{number}": {
      "get": {
        "tags": [
          "receipt-controller"
        ],
        "summary": "Find by Receipt by number",
        "operationId": "findReceiptByNumberUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "number",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The resource is obtained correctly",
            "schema": {
              "$ref": "#/definitions/Receipt"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/receipts/save": {
      "post": {
        "tags": [
          "receipt-controller"
        ],
        "summary": "Insertion of a new registry in Receipts entity",
        "operationId": "saveUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "receipt",
            "description": "receipt",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Receipt"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The resource is obtained correctly",
            "schema": {
              "$ref": "#/definitions/Receipt"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/receipts/update": {
      "put": {
        "tags": [
          "receipt-controller"
        ],
        "summary": "Update by id of a record in Receipts entity",
        "operationId": "updateUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "newReceipt",
            "description": "newReceipt",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Receipt"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The resource is obtained correctly",
            "schema": {
              "$ref": "#/definitions/Receipt"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/roles": {
      "get": {
        "tags": [
          "role-controller"
        ],
        "summary": "List of all Roles",
        "operationId": "findAllUsingGET_4",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK. The resource is obtained correctly",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Role"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/roles/delete/{id}": {
      "delete": {
        "tags": [
          "role-controller"
        ],
        "summary": "Deletion of a record in Roles entity by id",
        "operationId": "deleteUsingDELETE_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The resource is obtained correctly",
            "schema": {
              "type": "string"
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/roles/id/{id}": {
      "get": {
        "tags": [
          "role-controller"
        ],
        "summary": "Search by Id in Roles entity",
        "operationId": "findByIdUsingGET_4",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The resource is obtained correctly",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/roles/name/{roleName}": {
      "get": {
        "tags": [
          "role-controller"
        ],
        "summary": "Find by cart Id in Roles entity",
        "operationId": "findRoleByNameUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "roleName",
            "in": "path",
            "description": "roleName",
            "required": true,
            "type": "string",
            "enum": [
              "ROLE_ADMIN",
              "ROLE_USER"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The resource is obtained correctly",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/roles/save": {
      "post": {
        "tags": [
          "role-controller"
        ],
        "summary": "Insertion of a new registry in Roles entity",
        "operationId": "saveUsingPOST_4",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "role",
            "description": "role",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The resource is obtained correctly",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/roles/update": {
      "put": {
        "tags": [
          "role-controller"
        ],
        "summary": "Update by id of a record in Roles entity",
        "operationId": "updateUsingPUT_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "newRole",
            "description": "newRole",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The resource is obtained correctly",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "List of all Users",
        "operationId": "findAllUsingGET_5",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK. The resource is obtained correctly",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/users/birthdate/{date}": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "List of all Users by birth date",
        "operationId": "listUsersByBirthDateUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "description": "date",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The resource is obtained correctly",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/users/completeName": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "Search by complete name in Users entity",
        "operationId": "findUserByNameUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "lastName",
            "in": "query",
            "description": "lastName",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The resource is obtained correctly",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/users/country/{name}": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "List of all Users by country",
        "operationId": "listUsersByCountryUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The resource is obtained correctly",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/users/delete/{id}": {
      "delete": {
        "tags": [
          "user-controller"
        ],
        "summary": "Deletion of a record in Users entity by id",
        "operationId": "deleteUserUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The resource is obtained correctly",
            "schema": {
              "type": "string"
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/users/id/{id}": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "Search by Id in Users entity",
        "operationId": "findByIdUsingGET_5",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The resource is obtained correctly",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/users/role/{roleName}": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "List of all Users by role",
        "operationId": "listUsersByRoleUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "roleName",
            "in": "path",
            "description": "roleName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The resource is obtained correctly",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/users/save": {
      "post": {
        "tags": [
          "user-controller"
        ],
        "summary": "Insertion of a new registry in Users entity",
        "operationId": "saveUsingPOST_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The resource is obtained correctly",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/users/state/{name}": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "List of all Users by state",
        "operationId": "listUsersByStateUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The resource is obtained correctly",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/users/update": {
      "put": {
        "tags": [
          "user-controller"
        ],
        "summary": "Update by id of a record in Users entity",
        "operationId": "updateUserUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "newU",
            "description": "newU",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The resource is obtained correctly",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/users/zipcode/{code}": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "List of all Users by zip code",
        "operationId": "listUsersByZipCodeUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "code",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The resource is obtained correctly",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/users/{email}": {
      "get": {
        "tags": [
          "user-controller"
        ],
        "summary": "Search by email in Users entity",
        "operationId": "findByEmailUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "email",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The resource is obtained correctly",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Unexpected error"
          }
        }
      }
    }
  },
  "definitions": {
    "Article": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Image"
          }
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Label"
          }
        },
        "title": {
          "type": "string"
        }
      },
      "title": "Article"
    },
    "Cart": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Product"
          }
        },
        "receipt": {
          "$ref": "#/definitions/Receipt"
        },
        "user": {
          "$ref": "#/definitions/User"
        }
      },
      "title": "Cart"
    },
    "Category": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "Category"
    },
    "Country": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "Country"
    },
    "Image": {
      "type": "object",
      "properties": {
        "alt": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "url": {
          "type": "string"
        }
      },
      "title": "Image"
    },
    "Label": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "Label"
    },
    "Product": {
      "type": "object",
      "properties": {
        "category": {
          "$ref": "#/definitions/Category"
        },
        "description": {
          "type": "string"
        },
        "details": {
          "type": "string"
        },
        "discount": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Image"
          }
        },
        "name": {
          "type": "string"
        },
        "price": {
          "type": "number",
          "format": "double"
        },
        "priceWithDiscount": {
          "type": "number",
          "format": "double"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "recommendation": {
          "type": "string"
        }
      },
      "title": "Product"
    },
    "Receipt": {
      "type": "object",
      "properties": {
        "cart": {
          "$ref": "#/definitions/Cart"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "total": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "Receipt"
    },
    "Role": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "roleName": {
          "type": "string",
          "enum": [
            "ROLE_ADMIN",
            "ROLE_USER"
          ]
        }
      },
      "title": "Role"
    },
    "State": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "State"
    },
    "User": {
      "type": "object",
      "properties": {
        "birthDate": {
          "type": "string"
        },
        "country": {
          "$ref": "#/definitions/Country"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "lastName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/Role"
        },
        "state": {
          "$ref": "#/definitions/State"
        },
        "zipCode": {
          "$ref": "#/definitions/ZipCode"
        }
      },
      "title": "User"
    },
    "ZipCode": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "ZipCode"
    }
  }
}